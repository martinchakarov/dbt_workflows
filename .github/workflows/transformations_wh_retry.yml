name: Transformations with Warehouse check retry
on:
  # schedule:
    # - cron: "30 */6 * * *" # at minute 30 past every 6th hour

  workflow_dispatch:

env:
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

jobs:
  production-run:
    name: Production Run
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: |
          pip install --user pipenv
          pipenv install
      - name: Install dbt dependencies
        run: | 
          pipenv run dbt deps --target prod

      - name: Check ingestion warehouse status (initial check)
        id: check_initial
        run: | 
          result=$(pipenv run dbt run-operation check_ingestion_warehouse_status --target prod --args '{"fail_when_active": false}')
          echo "$result"
          if echo "$result" | grep -q 'WARNING'; then
            echo "::set-output name=check_result::warning"
          else
            echo "::set-output name=check_result::success"
          fi
        env:
          INGESTION_WAREHOUSE: ${{ secrets.INGESTION_WAREHOUSE }}
        shell: bash

      - name: Wait before retrying warehouse check
        if: ${{ steps.check_initial.outputs.check_result == 'warning' }}
        run: |
          echo "Warehouse is active, waiting for 5 minutes before re-checking."
          sleep 300

      - name: Check ingestion warehouse status (retry)
        if: ${{ steps.check_initial.outputs.check_result == 'warning' }}
        run: | 
          pipenv run dbt run-operation check_ingestion_warehouse_status --target prod --args '{"fail_when_active": true}'
        env:
          INGESTION_WAREHOUSE: ${{ secrets.INGESTION_WAREHOUSE }}

      - name: Run and test models
        if: ${{ success() }}
        run: |
          pipenv run dbt build --target prod

      - name: Cache manifest file
        uses: actions/cache/save@v4
        with:
          path: target/manifest.json
          key: manifest-${{ github.run_id }}

      - name: Send Slack notification
        if: ${{ failure() }}
        run: |
          curl ${{ secrets.SLACK_DBT_NOTIFICATION_WEBHOOK_URL }} \
            --request POST \
            --header 'Content-type: application/json' \
            --data \
              '{
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "${{ github.workflow }} job has failed"
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "The latest *production* run of dbt was unsuccessful."
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "Full logs available on GitHub"
                    },
                    "accessory": {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Navigate to GitHub"
                      },
                      "style": "primary",
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  }
                ]
              }'
